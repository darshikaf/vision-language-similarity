server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Collect logs from Docker containers
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["logging=promtail"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)' 
        target_label: 'container_name'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'logstream'
      - source_labels: ['__meta_docker_container_label_logging']
        target_label: 'logging'
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?P<level>\w+) - (?P<message>.*)'
      - labels:
          level:
          timestamp:

  # Collect logs from vision similarity service specifically  
  - job_name: vision-similarity-service
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: name
            values: ["observability-vision-similarity-service-1"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)' 
        target_label: 'container_name'
      - replacement: 'vision-similarity-service'
        target_label: 'service_name'
    pipeline_stages:
      - multiline:
          firstline: '^(INFO|DEBUG|WARNING|ERROR|CRITICAL)'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<level>INFO|DEBUG|WARNING|ERROR|CRITICAL):\s+(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?P<logger>.+?) - (?P<message>.*)'
      - labels:
          level:
          logger:
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05,000'